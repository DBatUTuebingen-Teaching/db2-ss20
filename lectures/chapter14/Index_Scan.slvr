{"version":1,"localeID":"en_US","sections":[{"lines":[{"expression":"# PostgreSQL cost model configuration","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"seq_page_cost        = 1.0       (I\/O cost of one sequential page access)","rawResult":"1","skipStatistics":false,"formattedResult":"1"},{"expression":"random_page_cost     = 4.0       (I\/O cost of one random page access)","rawResult":"4","skipStatistics":false,"formattedResult":"4"},{"expression":"cpu_tuple_cost       = 0.01      (CPU cost to process a heap file row)","rawResult":"0.01","skipStatistics":false,"formattedResult":"0.01"},{"expression":"cpu_index_tuple_cost = 0.005     (CPU cost to process an index leaf entry)","rawResult":"0.005","skipStatistics":false,"formattedResult":"0.005"},{"expression":"cpu_operator_cost    = 0.0025    (CPU function\/operator evaluation cost)","rawResult":"0.0025","skipStatistics":false,"formattedResult":"0.0025"},{"expression":"parallel_tuple_cost  = 0.1       (Cost of passing one row worker→leader)","rawResult":"0.1","skipStatistics":false,"formattedResult":"0.1"},{"expression":"parallel_setup_cost  = 1000.0    (Cost of spawning a parallel worker)","rawResult":"1000","skipStatistics":false,"formattedResult":"1,000"},{"expression":"# meta data for table \"indexed\" and index \"indexed_a\"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"#rows_in   = 10^6","rawResult":"1000000","skipStatistics":false,"formattedResult":"1M"},{"expression":"#pages_in  = 9343","rawResult":"9343","skipStatistics":false,"formattedResult":"9,343"},{"expression":"#rows_idx  = #rows_in   (rows and pages in index \"indexed_a\") ","rawResult":"1000000","skipStatistics":false,"formattedResult":"1M"},{"expression":"#pages_idx = 2745      ","rawResult":"2745","skipStatistics":false,"formattedResult":"2,745"},{"expression":"h          = 2          (index height)","rawResult":"2","skipStatistics":false,"formattedResult":"2"},{"expression":"corr_idx   = 1.0        (index correlation for \"indexed_a\", one if clustered)","rawResult":"1","skipStatistics":false,"formattedResult":"1"},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"− − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − −","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"# Estimated cost for SQL query (Index Scan over index \"indexed_a\")","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"SELECT i.c × 2 + 1","rawResult":"","skipStatistics":false,"behaviour":"sumsLinesAbove","formattedResult":""},{"expression":"FROM indexed AS i","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"WHERE i.a <= 100000;","rawResult":"","skipStatistics":false,"behaviour":"sumsLinesAbove","formattedResult":""},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"# estimated #rows(out), see \"rows = ...\" in EXPLAIN VERBOSE output","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"#rows_out = 95568","rawResult":"95568","lineReference":{"UID":""},"formattedResult":"95,568","skipStatistics":false},{"expression":"# selectivity of predicate sel(i.a <= 100000)","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"sel_pred = #rows_out \/ #rows_in","rawResult":"0.095568","skipStatistics":false,"formattedResult":"0.09557"},{"expression":"# Cost of Index Scan (B⁺Tree descent)","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"startup_cost_pred = 0","rawResult":"0","skipStatistics":false,"formattedResult":"0"},{"expression":"startup_cost_expr = 0","rawResult":"0","skipStatistics":false,"formattedResult":"0"},{"expression":"startup_cost = startup_cost_pred + startup_cost_expr + (ceil(log2(#rows_idx)) + (h + 1) × 50) × cpu_operator_cost","rawResult":"0.425","lineReference":{"UID":""},"formattedResult":"0.425","skipStatistics":false},{"expression":"# Cost of Index Scan (Leaf Level Scan)","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"run_cost_pred = 1 × cpu_operator_cost    (· <= 100000)","rawResult":"0.0025","skipStatistics":false,"formattedResult":"0.0025"},{"expression":"index_cpu_cost = sel_pred × #rows_idx × (cpu_index_tuple_cost + run_cost_pred)","rawResult":"716.76","skipStatistics":false,"formattedResult":"716.76"},{"expression":"index_IO_cost = ceil(sel_pred × #pages_idx) × random_page_cost","rawResult":"1052","skipStatistics":false,"formattedResult":"1,052"},{"expression":"# Cost of Index Scan (Heap File Access)","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"run_cost_expr = 2 × cpu_operator_cost    (· × 2, · + 1)","rawResult":"0.005","skipStatistics":false,"formattedResult":"0.005"},{"expression":"heap_cpu_cost = sel_pred × #rows_idx × (cpu_tuple_cost + run_cost_expr)","rawResult":"1433.52","skipStatistics":false,"formattedResult":"1,433.52"},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"clustered_IO_cost = 1 × random_page_cost + (sel_pred × #pages_in − 1) × seq_page_cost","rawResult":"895.891824","skipStatistics":false,"formattedResult":"895.89182"},{"expression":"unclustered_IO_cost = #pages_in × random_page_cost","rawResult":"37372","skipStatistics":false,"formattedResult":"37,372"},{"expression":"heap_IO_cost = unclustered_IO_cost + corr_idx^2 × (clustered_IO_cost − unclustered_IO_cost)","rawResult":"895.891824","skipStatistics":false,"formattedResult":"895.89182"},{"expression":"# total cost","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"total_cost = startup_cost + index_cpu_cost + index_IO_cost + heap_cpu_cost + heap_IO_cost","rawResult":"4098.596824","skipStatistics":false,"formattedResult":"4,098.59682"},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"","formattingOptions":{"disableImplicitUnits":true,"precision":5},"rawResult":"4098.596824","skipStatistics":false,"behaviour":"sumsLinesAbove","formattedResult":"4,098.59682"},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"− − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − − −","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"# Estimated cost for SQL query (Index Only Scan over index \"indexed_a\")","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"SELECT i.a × 2 + 1","rawResult":"1","skipStatistics":false,"formattedResult":"1"},{"expression":"FROM indexed AS i","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"WHERE i.a <= 100000;","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"# estimated #rows(out), see \"rows = ...\" in EXPLAIN VERBOSE output","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"#rows_out = 95568","rawResult":"95568","skipStatistics":false,"formattedResult":"95,568"},{"expression":"# selectivity of predicate sel(i.a <= 100000)","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"sel_pred = #rows_out \/ #rows_in","rawResult":"0.095568","skipStatistics":false,"formattedResult":"0.09557"},{"expression":"# Cost of Index Scan (B⁺Tree descent)","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"startup_cost_pred = 0","rawResult":"0","skipStatistics":false,"formattedResult":"0"},{"expression":"startup_cost_expr = 0","rawResult":"0","skipStatistics":false,"formattedResult":"0"},{"expression":"startup_cost = startup_cost_pred + startup_cost_expr + (ceil(log2(#rows_idx)) + (h + 1) × 50) × cpu_operator_cost","rawResult":"0.425","skipStatistics":false,"formattedResult":"0.425"},{"expression":"# Cost of Index Scan (Leaf Level Scan)","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"run_cost_pred = 1 × cpu_operator_cost    (· <= 100000)","rawResult":"0.0025","skipStatistics":false,"formattedResult":"0.0025"},{"expression":"index_cpu_cost = sel_pred × #rows_idx × (cpu_index_tuple_cost + run_cost_pred)","rawResult":"716.76","skipStatistics":false,"formattedResult":"716.76"},{"expression":"index_IO_cost = ceil(sel_pred × #pages_idx) × random_page_cost","rawResult":"1052","skipStatistics":false,"formattedResult":"1,052"},{"expression":"# Cost of Index Scan (Heap File Access)","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"We do not access the heap file to process the rows but still need to","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"process the rows read off the index leaves, thus heap_cpu_cost > 0 even","rawResult":"true","skipStatistics":false,"formattedResult":"true"},{"expression":"for an Index Only Scan:","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"run_cost_expr = 2 × cpu_operator_cost    (· × 2, · + 1)","rawResult":"0.005","skipStatistics":false,"formattedResult":"0.005"},{"expression":"heap_cpu_cost = sel_pred × #rows_idx × (cpu_tuple_cost + run_cost_expr)","rawResult":"1433.52","skipStatistics":false,"formattedResult":"1,433.52"},{"expression":"heap_IO_cost = 0   (Index Only Scan)","rawResult":"0","skipStatistics":false,"formattedResult":"0"},{"expression":"# total cost","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"total_cost = startup_cost + index_cpu_cost + index_IO_cost + heap_cpu_cost + heap_IO_cost","rawResult":"3202.705","skipStatistics":false,"formattedResult":"3,202.705"},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"","rawResult":"3202.705","skipStatistics":false,"behaviour":"sumsLinesAbove","formattedResult":"3,202.705"},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""},{"expression":"","rawResult":"","skipStatistics":false,"formattedResult":""}]}]}